 /*
Завдання:
Розробити та продемонструвати програму мовою Java в середовищі Eclipse для вирішення прикладної задачі за номером, що відповідає збільшеному на одиницю залишку від ділення на 10 зменшеного на одиницю номера студента в журналі групи.

public class Main {
    public static void main(String[] args) {
        // Номер студента в журналі групи
        
        int groupNumber = 11;

        // Обчислюємо номер студента
        
        // Віднімаємо 1 від номера групи, щоб перейти до індексу в масиві (групи зазвичай нумеруються з 1)
        // Застосовуємо оператор % (остача від ділення) на 10, щоб обмежити результат від 0 до 9
        // Додаємо 1, щоб отримати фактичний номер студента в журналі (з 1 до 10)
        int studentNumber = (groupNumber - 1) % 10 + 1;

        // Виводимо результат
        
        // Виводимо номер студента в журналі групи
        System.out.println("Номер студента в журналі групи: " + studentNumber);
    }
}
*/


package ua.khpi.oop.melnik02;

import java.util.Random;

public class Main {

    public static void main(String[] args) {
        Random random = new Random(); // Створення об'єкта класу Random для генерації випадкових чисел

        System.out.println("------------------------------------------------");
        System.out.println("|  Число A   |  Число B   |  НСД(A, B)    |");
        System.out.println("------------------------------------------------");

        for (int i = 0; i < 10; i++) { // Запускаємо цикл 10 разів для обчислення НСД для 10 пар чисел
            int numberA = random.nextInt(100) + 1; // Генеруємо випадкове число A від 1 до 100
            int numberB = random.nextInt(100) + 1; // Генеруємо випадкове число B від 1 до 100

            int gcd = findGCD(numberA, numberB); // Викликаємо метод findGCD для знаходження НСД чисел A і B

            // Виводимо дані в таблицю з вирівнюванням по крайнім лівим рядкам (%4d вказує на вирівнювання по 4 символи)
            System.out.printf("|    %4d    |    %4d    |      %4d     |%n", numberA, numberB, gcd);
        }

        System.out.println("------------------------------------------------");
    }

    // Метод для знаходження найбільшого спільного дільника
    public static int findGCD(int a, int b) {
        while (b != 0) { // Виконуємо цикл, доки b не стане рівним 0
            int temp = b; // Зберігаємо значення b в змінну temp
            b = a % b; // Замінюємо b на залишок від ділення a на b
            a = temp; // Замінюємо a на попереднє значення b, збережене в temp
        }
        return a; // Повертаємо a, яке тепер містить НСД чисел
    }
}

